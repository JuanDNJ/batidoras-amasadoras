---
import HeaderLink from "../HeaderLink.astro";
import UlLinks from "./UlLinks.astro";
import { getCollection } from "astro:content";
const marcas = await getCollection("batidora-de-pedestal");
const marcasD = marcas.map((item) => {
  if (!item.slug.includes("/")) {
    return item;
  }
});
---

<nav class="nav">
  <section class="container">
    <section class="logo">
      <img
        src="/images/logos/webp/batidoras-pedestal.webp"
        alt=""
        width="32"
        height="32"
      />
    </section>
    <section class="menuBars">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="currentColor"
        class="toggle__menubars w-12 h-12"
      >
        <path
          fill-rule="evenodd"
          d="M3 5.25a.75.75 0 0 1 .75-.75h16.5a.75.75 0 0 1 0 1.5H3.75A.75.75 0 0 1 3 5.25Zm0 4.5A.75.75 0 0 1 3.75 9h16.5a.75.75 0 0 1 0 1.5H3.75A.75.75 0 0 1 3 9.75Zm0 4.5a.75.75 0 0 1 .75-.75h16.5a.75.75 0 0 1 0 1.5H3.75a.75.75 0 0 1-.75-.75Zm0 4.5a.75.75 0 0 1 .75-.75h16.5a.75.75 0 0 1 0 1.5H3.75a.75.75 0 0 1-.75-.75Z"
          clip-rule="evenodd"></path>
      </svg>
    </section>
    <div class="primaryMenu hidden">
      <section class="flexGroup">
        <HeaderLink menu class="linkBrand" href="#">Marcas</HeaderLink>
        <article class="submenu">
          <UlLinks>
            {
              marcasD.map(
                (marca) =>
                  marca && (
                    <HeaderLink
                      menu
                      class="submenuLinkBrand"
                      href={`/${marca.slug}`}
                    >
                      {marca.slug.replace("-", " ").toUpperCase()}
                    </HeaderLink>
                  ),
              )
            }
          </UlLinks>
        </article>
      </section>

      <HeaderLink menu href="/resenas" class="linkBrand"> Rese√±as </HeaderLink>
    </div>
  </section>
</nav>
<script>
  //  TOGGLE MENU
  const toggleMenubars = document.querySelector(".toggle__menubars");
  const primary__menu = document.querySelector(".primaryMenu") as HTMLElement;
  toggleMenubars?.addEventListener("click", (event) => {
    primary__menu.classList.toggle("hidden");
    primary__menu.classList.add("flex");
  });
</script>
<style>
  .nav {
    @apply w-full max-h-96 flex text-stone-200 bg-[#dc2626] md:py-0 lg:py-6 relative md:static z-10;
  }

  .container {
    @apply w-full md:max-w-7xl m-auto grid grid-cols-6 items-center;
  }

  .menuBars {
    @apply col-span-5 text-slate-200 flex items-start justify-end md:hidden pr-4;
  }

  .logo {
    @apply flex pl-4;
  }

  .primaryMenu {
    @apply bg-[#dc2626] absolute top-[100%] right-0 w-[50vw] h-auto md:w-auto z-10 flex-col col-span-6 px-4 py-4 lg:py-0 md:static md:flex md:flex-row md:justify-end md:col-span-5 md:pr-4 gap-4;
  }

  .flexGroup {
    @apply relative;
  }

  .submenu {
    @apply hidden;
  }

  .flexGroup:hover .submenu {
    @apply flex md:absolute md:right-0;
  }

  /* .lll {
  @apply hidden lg:min-w-40 group-hover:absolute group-hover:right-[100%] lg:group-hover:right-0 group-hover:mx-4 group-hover:top-0 lg:group-hover:top-0 group-hover:flex group-hover:flex-col py-2 lg:py-16;
} */

  .linkBrand,
  .submenuLinkBrand {
    @apply hover:underline;
    font-size: clamp(1.2em, 2.5dvw, 1.3em);
  }

  .submenu__linkBrand {
    font-size: clamp(1.1em, 2.5dvw, 1.2em);
  }
</style>
